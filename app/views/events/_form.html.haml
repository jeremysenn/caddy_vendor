= form_for @event, :html => {class: 'form-horizontal event_form', role: 'form'}, remote: true do |f|
  = f.hidden_field :club_id, value: current_club.id
  = f.hidden_field :date_range, class: "date-range-picker"
  = f.hidden_field :start, value: Date.today, class: 'start_hidden'
  = f.hidden_field :end, value: Date.today, class: 'end_hidden'
  = f.hidden_field :round, value: '18'
  .row.form-group
    %div{:class => "col-sm-12"}
      %label.col-sm-2.control-label.lead{for: "event_players"} 
        Players
      %div{:class => "col-sm-10"}
        = f.nested_fields_for :players do |ff|
          .card.player_fields{class: "#{ff.object.payment_reversed? ? 'card-outline-danger' : ''}" }
            - if ff.object.paid?
              %p.card-header.lead Paid
            - elsif ff.object.payment_reversed?
              %p.card-header.lead.text-danger Payment Reversed
            - else
              %p.card-header
                = ff.remove_nested_fields_link "<i class='fa fa-trash-o'></i>".html_safe, class: 'btn btn-sm btn-danger', role: 'button', data: { confirm: 'Are you sure you want to delete?' }
            .card-block
              - unless ff.object.paid?
                .row.form-group
                  .col-sm-6
                    =# ff.collection_select :member_id, current_user.members, :id, :full_name, class: 'input-lg form-control', required: true
                    =# ff.select :member_id, current_user.members.order(:NameL).collect { |m| [ m.full_name_by_last_name, m.id ] }, {required: true, include_blank: false}, class: "form-control"
                    = ff.select :member_id, current_user.members.active.order(:NameL).collect { |m| [ m.full_name, m.id ] }, {prompt: '-- Select member --'}, required: true, class: "member_select form-control", style: "width: 100%;"
                  .col-sm-6
                    =# ff.collection_select :caddy_id, current_club.caddies, :id, :full_name, class: 'input-lg form-control', required: true
                    =# ff.select :caddy_id, current_club.caddies.sort_by {|c| c.last_name}.collect { |c| [ c.full_name, c.id ] }, {required: true, include_blank: false}, class: "form-control"
                    =# ff.select :caddy_id, current_club.caddies.sort_by {|c| c.last_name}.collect { |c| [ c.full_name, c.id ] }, {required: true, include_blank: false}, class: "js-example-basic-single form-control"
                    =# ff.select :caddy_id, current_club.caddies.sort_by {|c| c.last_name}.collect { |c| [ c.full_name, c.id ] }, {prompt: '-- Select caddy --'}, required: true, class: "caddy_select form-control", style: "width: 100%;"
                    = ff.select :caddy_id, grouped_options_for_select(current_club.grouped_caddies_for_select, ff.object.caddy_id), {prompt: '-- Select caddy --'}, required: true, class: "caddy_select form-control", style: "width: 100%;"

              - else
                .row.form-group
                  .col-sm-6
                    %p.lead= ff.object.member.full_name
                  .col-sm-6
                    %p.lead= ff.object.caddy.full_name
              .row.form-group
                - unless ff.object.paid?
                  .col-sm-6
                    = ff.select :round, [["Eighteen holes", 18], ["Nine holes", 9]], {required: true, include_blank: false}, class: "form-control"
                    -#
                      .btn-group-horizontal{"data-toggle" => "buttons"}
                        %label.btn.btn-secondary{class: "#{(ff.object.new_record? or ff.object.eighteen_holes? ) ? 'active' : ''}"}
                          = ff.radio_button :round, 18, :checked => ff.object.new_record?
                          Eighteen
                        %label.btn.btn-secondary{class: "#{ff.object.nine_holes? ? 'active' : ''}"}
                          = ff.radio_button :round, 9
                          Nine
                  .col-sm-6
                    = ff.select :caddy_type, ["Carry", "Chase"], {required: true, include_blank: false}, class: "form-control"
                    -#
                      .btn-group-horizontal{"data-toggle" => "buttons"}
                        %label.btn.btn-secondary{class: "#{(ff.object.new_record? or ff.object.carry? ) ? 'active' : ''}"}
                          = ff.radio_button :caddy_type, 'Carry', :checked => ff.object.new_record?
                          Carry
                        %label.btn.btn-secondary{class: "#{(ff.object.chase? ) ? 'active' : ''}"}
                          = ff.radio_button :caddy_type, 'Chase'
                          Chase
                  -#
                    .col-sm-6
                      %br
                      = ff.remove_nested_fields_link 'x', class: 'btn btn-sm btn-danger', role: 'button', data: { confirm: 'Are you sure you want to delete?' }
                - else
                  .col-sm-6
                    %p.lead= ff.object.round_as_string
                  .col-sm-6
                    %p.lead= ff.object.caddy_type
              .row.form-group
                .col-sm-12
                  = ff.text_field :note, placeholder: 'Player note', class: 'input-lg form-control'
                
        = f.add_nested_fields_link :players, "<i class='fa fa-plus'></i> Add Player".html_safe, class: 'more_players_link btn btn-warning'
  .row.form-group
    %div{:class => "col-sm-12"}
      %label.col-sm-2.control-label.lead{for: "event_notes"} 
        Notes
      .col-sm-10
        = f.text_area :notes, placeholder:'Notes', class: 'input-lg form-control'
  
  .row.form-group
    %div{:class => "col-sm-12"}
      %button.btn.btn-secondary{"aria-hidden" => "true", "data-dismiss" => "modal", :type => "button", onclick: "$('.modal-backdrop').remove(); $('.modal').hide();"} Cancel
      = f.submit "Payment", :class => 'btn btn-success', name: 'pay', onclick: "$('.modal-backdrop').remove(); $('.modal').hide();" #if @event.new_record? or @event.not_paid?
      = f.submit "Save", :class => 'btn btn-primary', onclick: "$('.modal-backdrop').remove(); $('.modal').hide();"
      = link_to 'Delete',                      |
            event,                                 |
            method: :delete,                       |
            class: 'btn btn-danger',               |
            data: { confirm: 'Are you sure?' },    |
            remote: true unless @event.new_record? |

:javascript
  $('.modal').on('shown.bs.modal', function() {
    $(this).find('[autofocus]').first().focus();
  });

  $('.event_form').on('click', '.add_nested_fields_link', function() {
    if ($('.event_form').find('.player_fields:visible').length === 4) {
      $(this).hide();
    }
    return true;
  });

  $('.event_form').on('click', '.remove_nested_fields_link', function() {
    if ($('.event_form').find('.player_fields:visible').length === 5) {
      $('.event_form').find('.add_nested_fields_link').show();
    }
    return true;
  });

  // Apply select2 to existing player caddy selects
  $('.caddy_select').select2({
    theme: 'bootstrap'
  });

  // Apply select2 to dynamically added player caddy selects
  $("body").on("click",".more_players_link", function(){
    $('.caddy_select').select2({
      theme: 'bootstrap',
    });
  });

  // Apply select2 to existing player member selects
  $('.member_select').select2({
    theme: 'bootstrap',
  });

  // Apply select2 to dynamically added player member selects
  $("body").on("click",".more_players_link", function(){
    $('.member_select').select2({
      theme: 'bootstrap',
    });
  });