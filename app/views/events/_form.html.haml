= form_for @event, :html => {class: 'form-horizontal event_form', role: 'form'} do |f|
  = f.hidden_field :course_id, value: current_course.id
  = f.hidden_field :date_range, class: "date-range-picker"
  = f.hidden_field :round, value: '18'
  .row.form-group
    %div{:class => "col-sm-12"}
      %div{:class => "col-sm-3"}
        %p.lead= current_course.name
  .row.form-group
    %div{:class => "col-sm-12"}
      %label.col-sm-2.control-label.lead{for: "event_start"}
        Start
      %div{:class => "col-sm-10"}
        = f.datetime_select :start, default: Time.now.in_time_zone(current_course.time_zone), minute_step: 15, ampm: true
        -#
          to
          = f.datetime_select :end, value: Time.now.in_time_zone(current_user.time_zone), minute_step: 15, ampm: true
  .row.form-group
    %div{:class => "col-sm-12"}
      %label.col-sm-2.control-label.lead{for: "event_players"} 
        Players
      %div{:class => "col-sm-10"}
        = f.nested_fields_for :players do |ff|
          .card.player_fields{class: "#{ff.object.payment_reversed? ? 'card-outline-danger' : ''}" }
            - if ff.object.paid?
              %p.card-header.lead.text-success Paid
            - elsif ff.object.payment_reversed?
              %p.card-header.lead.text-danger Payment Reversed
            - else
              %p.card-header
                = ff.remove_nested_fields_link "<i class='fa fa-trash-o'></i>".html_safe, class: 'btn btn-sm btn-danger', role: 'button', data: { confirm: 'Are you sure you want to delete?' }
            .card-block
              - unless ff.object.paid?
                .row.form-group
                  .col-sm-6
                    =# ff.collection_select :member_id, current_user.members, :id, :full_name, class: 'input-lg form-control', required: true
                    =# ff.select :member_id, current_user.members.order(:NameL).collect { |m| [ m.full_name_by_last_name, m.id ] }, {required: true, include_blank: false}, class: "form-control"
                    = ff.select :member_id, current_user.members.active.order(:NameL).collect { |m| [ m.full_name_with_member_number, m.id ] }, {prompt: '-- Select member --'}, required: true, class: "member_select form-control", style: "width: 100%;"
                  .col-sm-6
                    =# ff.collection_select :caddy_id, current_course.caddies, :id, :full_name, class: 'input-lg form-control', required: true
                    =# ff.select :caddy_id, current_course.caddies.sort_by {|c| c.last_name}.collect { |c| [ c.full_name, c.id ] }, {required: true, include_blank: false}, class: "form-control"
                    =# ff.select :caddy_id, current_course.caddies.sort_by {|c| c.last_name}.collect { |c| [ c.full_name, c.id ] }, {required: true, include_blank: false}, class: "js-example-basic-single form-control"
                    =# ff.select :caddy_id, current_course.caddies.sort_by {|c| c.last_name}.collect { |c| [ c.full_name, c.id ] }, {prompt: '-- Select caddy --'}, required: true, class: "caddy_select form-control", style: "width: 100%;"
                    =# ff.select :caddy_id, grouped_options_for_select(current_course.grouped_caddies_by_status_for_select, ff.object.caddy_id), {prompt: '-- Select caddy --'}, required: true, class: "caddy_select form-control", style: "width: 100%;"
                    = ff.select :caddy_id, grouped_options_for_select(current_course.grouped_caddies_by_rank_for_select, ff.object.caddy_id), {prompt: '-- Select caddy --'}, required: true, class: "caddy_select form-control", style: "width: 100%;"

              - else
                .row.form-group
                  .col-sm-6
                    %p.lead= ff.object.member.full_name
                  .col-sm-6
                    %p.lead= ff.object.caddy.full_name
              .row.form-group
                - unless ff.object.paid?
                  .col-sm-6
                    = ff.select :round, [["Eighteen holes", 18], ["Nine holes", 9]], {required: true, include_blank: false}, class: "form-control"
                  .col-sm-6
                    = ff.select :caddy_type, current_course.caddy_types, {required: true, include_blank: false}, class: "form-control"
                    -#
                      - unless current_user.company.id == 4
                        = ff.select :caddy_type, ["Carry", "Chase"], {required: true, include_blank: false}, class: "form-control"
                      - else
                        = ff.select :caddy_type, ["Carry", "Chase", "Forecaddy", "Shadow", "Car Wash"], {required: true, include_blank: false}, class: "form-control"
                    
                - else
                  .col-sm-6
                    %p.lead= ff.object.round_as_string
                  .col-sm-6
                    %p.lead= ff.object.caddy_type
              .row.form-group
                .col-sm-4
                  - unless ff.object.note.blank?
                    %p.lead Guest
                  -#
                    #note_field.collapse.show{class: "#{ff.object.note.blank? ? '' : 'in'}"}
                    =# ff.text_field :note, placeholder: 'Guest', class: 'input-lg form-control'
                  - unless ff.object.paid?
                    = ff.select :note, current_course.player_notes, {prompt: 'Guest'},class: "note_select form-control", style: "width: 100%;", required: true
                  - else
                    = ff.object.note
                
        = f.add_nested_fields_link :players, "<i class='fa fa-plus'></i> Add Player".html_safe, class: 'more_players_link btn btn-warning'
  .row.form-group
    %div{:class => "col-sm-12"}
      %label.col-sm-2.control-label.lead{for: "event_notes"} 
        Notes
      .col-sm-10
        = f.text_area :notes, placeholder:'Notes', class: 'input-lg form-control'
  
  .row.form-group
    %div{:class => "col-sm-12"}
      = link_to 'Cancel', :back, class: 'btn btn-secondary'
      = f.submit "Payment", :class => 'btn btn-success', name: 'pay'
      %button.btn.btn-primary{:type => "submit"} 
        Save
      - unless @event.contains_paid_players?
        = link_to 'Delete',                      |
              @event,                                 |
              method: :delete,                       |
              class: 'btn btn-danger',               |
              data: { confirm: 'Are you sure?' },    |
              remote: true unless @event.new_record? |

:javascript
  //$('.event_form').on('click', '.add_nested_fields_link', function() {
  //  if ($('.event_form').find('.player_fields:visible').length === 4) {
  //    // Don't allow for more than five players to be entered, so remove add button
  //    $(this).hide();
  //  }
  //  return true;
  //});

  //$('.event_form').on('click', '.remove_nested_fields_link', function() {
  //  if ($('.event_form').find('.player_fields:visible').length === 5) {
  //    // Put the add player button back if go under five players
  //    $('.event_form').find('.add_nested_fields_link').show();
  //  }
  //  return true;
  //});

  // Apply select2 to existing player caddy selects
  $('.caddy_select').select2({
    theme: 'bootstrap'
  });

  // Apply select2 to existing player member selects
  $('.member_select').select2({
    theme: 'bootstrap',
  });

  // Apply select2 to existing player guest selects
  $('.note_select').select2({
    placeholder: 'Guest',
    theme: 'bootstrap',
    tags: true,
    multiple: false,
  });

  // Apply select2 to dynamically added player selects
  $('.event_form').on("click",".more_players_link", function(){
    // Need to add a bit of a delay so that select2 gets applied to newly added items
    setTimeout(function() {
       $('.caddy_select').select2({
        theme: 'bootstrap',
      });
      $('.member_select').select2({
        theme: 'bootstrap',
      });
      $('.note_select').select2({
        placeholder: 'Guest',
        theme: 'bootstrap',
        tags: true,
        multiple: false,
      });
    }, 0);
    
    
  });