.container
  %br
  .card.card-block
    .card-title
      %h4= @event.club.name
      %p.lead
        = @event.start.strftime("%-m/%-d/%y %l:%M %p")
        #player_total.pull-right
          = number_to_currency(@event.players_total_with_fee)
    .table-responsive
      %table.table.table-striped#players
        %thead
          %tr
            %th Member
            %th Caddy
            %th Type
            %th Round
            %th Note
            %th Charge
            %th Tip
            %th Fee
            %th
        %tbody
          - @event.players.each do |player|
            %tr{class: "#{(player.transfer and player.transfer.reversed?) ? 'table-danger' : '' }"}
              %td= player.member.full_name
              %td= player.caddy.full_name
              %td= player.caddy_type
              %td= player.round
              %td= player.note
              %td
                =# "#{player.fee.blank? ? number_to_currency(player.caddy_pay_rate) : number_to_currency(player.fee)}"
                $
                = number_with_precision("#{player.fee.blank? ? player.caddy_pay_rate : player.fee}", precision: 2)
              %td{class: "#{player.paid? ? '' : 'text-primary'}"}
                =# number_to_currency("#{player.tip.blank? ? '0' : player.tip}")
                $
                - unless player.paid?
                  %a{href: nil, class: 'tip', "data-pk" => player.id, "data-url" => "/players/#{player.id}/update_tip", "data-value" => player.tip.blank? ? '0' : player.tip}
                    = number_with_precision("#{player.tip.blank? ? '0' : player.tip}", precision: 2)
                - else
                  = number_with_precision("#{player.tip.blank? ? '0' : player.tip}", precision: 2)
              %td
                = number_to_currency("#{player.transfer_transaction_fee.blank? ? current_club.transaction_fee : player.transfer_transaction_fee}")
              %td
                -# unless player.caddy.account.blank? or player.member.account.blank?
                = form_for Transfer.new, :html => {class: 'form-horizontal', role: 'form', id: 'transfer_form'} do |f|
                  = f.hidden_field :customer_id, value: player.member_id
                  = f.hidden_field :player_id, value: player.id
                  = f.hidden_field :from_account, value: "#{player.member.primary? ? player.member.account.id : player.member.parent_customer.account.id}"
                  = f.hidden_field :to_account, value: player.caddy.account.id unless player.caddy.account.blank?
                  = f.hidden_field :fee, value: current_club.transaction_fee, class: 'transaction_fee'
                  = f.hidden_field :fee_to_account_id, value: current_club.account.id unless current_club.account.blank?
                  = f.hidden_field :caddy_fee, value: player.fee.blank? ? player.caddy_pay_rate : player.fee
                  = f.hidden_field :caddy_tip, value: player.tip.blank? ? 0 : player.tip
                  = f.hidden_field :amount, value: player.total, class: 'amount'
                  = f.submit "Pay", :class => 'btn btn-success', data: { confirm: 'Are you sure you want to pay this?' } unless player.paid?
                = "No account for Caddy" if player.caddy.account.blank?
                - if player.paid? and (player.transfer and player.transfer.reversable?)
                  = form_for player.transfer, :html => {class: 'form-horizontal', role: 'form', id: 'transfer_form'} do |f|
                    = f.hidden_field :reversed, value: true
                    = f.submit "Reverse", :class => 'btn btn-danger', data: { confirm: 'Are you sure you want to reverse this transfer?' }
                - if (player.transfer and player.transfer.reversed?)
                  .text-danger Reversed
                =# "Paid" if player.paid?
                =# link_to 'Rate', new_caddy_rating_path(player_id: player.id), class: 'btn btn-warning' unless player.caddy_rating.present?
    .card-link= link_to "Done", events_path, class: 'btn btn-primary'